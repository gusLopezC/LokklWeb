exports.ids=[12],exports.modules={ejwX:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"NgxPayPalModule",(function(){return NgxPayPalModule})),__webpack_require__.d(__webpack_exports__,"NgxPaypalComponent",(function(){return NgxPaypalComponent})),__webpack_require__.d(__webpack_exports__,"PayPalScriptService",(function(){return PayPalScriptService})),__webpack_require__.d(__webpack_exports__,"\u0275a",(function(){return ScriptService}));var _angular_common__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("ofXK"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("fXoL"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("XNiG");const _c0=["payPalButtonContainer"];class ScriptService{constructor(zone){this.zone=zone}registerScript(url,globalVar,onReady){const existingGlobalVar=window[globalVar];if(existingGlobalVar)return void this.zone.run(()=>{onReady(existingGlobalVar)});const scriptElem=document.createElement("script");scriptElem.id=this.getElemId(globalVar),scriptElem.innerHTML="",scriptElem.onload=()=>{this.zone.run(()=>{onReady(window[globalVar])})},scriptElem.src=url,scriptElem.async=!0,scriptElem.defer=!0,document.getElementsByTagName("head")[0].appendChild(scriptElem)}cleanup(globalVar){const scriptElem=document.getElementById(this.getElemId(globalVar));scriptElem&&scriptElem.remove()}getElemId(globalVar){return`ngx-paypal-script-elem-${globalVar}`}}ScriptService.\u0275fac=function ScriptService_Factory(t){return new(t||ScriptService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275inject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone))},ScriptService.\u0275prov=_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineInjectable"]({token:ScriptService,factory:ScriptService.\u0275fac}),ScriptService.ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone}];class PayPalScriptService{constructor(scriptService){this.scriptService=scriptService,this.paypalWindowName="paypal"}registerPayPalScript(config,onReady){this.scriptService.registerScript(this.getUrlForConfig(config),this.paypalWindowName,onReady)}destroyPayPalScript(){this.scriptService.cleanup(this.paypalWindowName)}getUrlForConfig(config){const params=[{name:"client-id",value:config.clientId}];return config.currency&&params.push({name:"currency",value:config.currency}),config.commit&&params.push({name:"commit",value:config.commit}),config.extraParams&&params.push(...config.extraParams),`https://www.paypal.com/sdk/js${this.getQueryString(params)}`}getQueryString(queryParams){let queryString="";for(let i=0;i<queryParams.length;i++){const queryParam=queryParams[i];queryString+=0===i?"?":"&",queryString+=`${queryParam.name}=${queryParam.value}`}return queryString}}PayPalScriptService.\u0275fac=function PayPalScriptService_Factory(t){return new(t||PayPalScriptService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275inject"](ScriptService))},PayPalScriptService.\u0275prov=_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineInjectable"]({token:PayPalScriptService,factory:PayPalScriptService.\u0275fac}),PayPalScriptService.ctorParameters=()=>[{type:ScriptService}];class NgxPaypalComponent{constructor(paypalScriptService,cdr,ngZone){this.paypalScriptService=paypalScriptService,this.cdr=cdr,this.ngZone=ngZone,this.registerScript=!0,this.scriptLoaded=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.ngUnsubscribe=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a,this.initializePayPal=!0}set payPalButtonContainer(content){this.payPalButtonContainerElem=content}ngOnChanges(changes){this.payPalButtonContainerId||(this.payPalButtonContainerId=this.generateElementId());const config=this.config;changes.config.isFirstChange()&&config&&this.registerScript&&this.initPayPalScript(config,payPal=>{this.payPal=payPal,this.doPayPalCheck()}),changes.config.isFirstChange()||this.reinitialize(config)}ngOnDestroy(){this.paypalScriptService.destroyPayPalScript(),this.ngUnsubscribe.next(),this.ngUnsubscribe.complete()}ngAfterViewInit(){this.doPayPalCheck()}customInit(payPal){this.payPal=payPal,this.doPayPalCheck()}reinitialize(config){if(this.config=config,this.payPal=void 0,this.paypalScriptService.destroyPayPalScript(),this.payPalButtonContainerId=this.generateElementId(),this.initializePayPal=!0,this.payPalButtonContainerElem)for(;this.payPalButtonContainerElem.nativeElement.firstChild;)this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);this.cdr.detectChanges(),this.config&&(this.payPal?this.doPayPalCheck():this.initPayPalScript(this.config,payPal=>{this.payPal=payPal,this.doPayPalCheck()}))}doPayPalCheck(){this.initializePayPal&&this.config&&this.payPal&&this.payPalButtonContainerElem&&this.payPalButtonContainerElem.nativeElement.id&&(this.initializePayPal=!1,this.initPayPal(this.config,this.payPal))}initPayPalScript(config,initPayPal){this.paypalScriptService.registerPayPalScript({clientId:config.clientId,commit:config.advanced&&config.advanced.commit?config.advanced.commit:void 0,currency:config.currency,extraParams:config.advanced&&config.advanced.extraQueryParams?config.advanced.extraQueryParams:[]},paypal=>{this.scriptLoaded.next(paypal),initPayPal(paypal)})}generateElementId(){return`ngx-captcha-id-${(new Date).valueOf()}`}initPayPal(config,paypal){this.ngZone.runOutsideAngular(()=>{paypal.Buttons({style:config.style,createOrder:(data,actions)=>this.ngZone.run(()=>{if(config.createOrderOnClient&&config.createOrderOnServer)throw Error("Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\n                        Please choose one or the other.");if(!config.createOrderOnClient&&!config.createOrderOnServer)throw Error("Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\n                        Please define one of these to create order.");if(config.createOrderOnClient)return actions.order.create(config.createOrderOnClient(data));if(config.createOrderOnServer)return config.createOrderOnServer(data);throw Error("Invalid state for 'createOrder'.")}),onApprove:(data,actions)=>this.ngZone.run(()=>{if(config.onApprove&&config.onApprove(data,actions),config.authorizeOnServer)return config.authorizeOnServer(data,actions);const onClientAuthorization=config.onClientAuthorization;onClientAuthorization&&actions.order.capture().then(details=>{this.ngZone.run(()=>{onClientAuthorization(details)})})}),onError:error=>{this.ngZone.run(()=>{config.onError&&config.onError(error)})},onCancel:(data,actions)=>{this.ngZone.run(()=>{config.onCancel&&config.onCancel(data,actions)})},onShippingChange:(data,actions)=>this.ngZone.run(()=>{if(config.onShippingChange)return config.onShippingChange(data,actions)}),onClick:(data,actions)=>{this.ngZone.run(()=>{config.onClick&&config.onClick(data,actions)})},onInit:(data,actions)=>{this.ngZone.run(()=>{config.onInit&&config.onInit(data,actions)})}}).render(`#${this.payPalButtonContainerId}`)})}}NgxPaypalComponent.\u0275fac=function NgxPaypalComponent_Factory(t){return new(t||NgxPaypalComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275directiveInject"](PayPalScriptService),_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef),_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone))},NgxPaypalComponent.\u0275cmp=_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineComponent"]({type:NgxPaypalComponent,selectors:[["ngx-paypal"]],viewQuery:function NgxPaypalComponent_Query(rf,ctx){var _t;(1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275viewQuery"](_c0,!0),2&rf)&&(_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275queryRefresh"](_t=_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275loadQuery"]())&&(ctx.payPalButtonContainer=_t.first))},inputs:{registerScript:"registerScript",config:"config"},outputs:{scriptLoaded:"scriptLoaded"},features:[_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275NgOnChangesFeature"]()],decls:2,vars:1,consts:[[3,"id"],["payPalButtonContainer",""]],template:function NgxPaypalComponent_Template(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](0,"div",0,1),2&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("id",ctx.payPalButtonContainerId)},encapsulation:2,changeDetection:0}),NgxPaypalComponent.ctorParameters=()=>[{type:PayPalScriptService},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgZone}],NgxPaypalComponent.propDecorators={config:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],registerScript:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],scriptLoaded:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output}],payPalButtonContainer:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,args:["payPalButtonContainer",{static:!1}]}]};class NgxPayPalModule{}NgxPayPalModule.\u0275mod=_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineNgModule"]({type:NgxPayPalModule}),NgxPayPalModule.\u0275inj=_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineInjector"]({factory:function NgxPayPalModule_Factory(t){return new(t||NgxPayPalModule)},providers:[ScriptService,PayPalScriptService],imports:[[_angular_common__WEBPACK_IMPORTED_MODULE_0__.CommonModule]]})}};